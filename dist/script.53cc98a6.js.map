{"version":3,"sources":["script.js"],"names":["draggingPointIndex","canvas","document","getElementById","ctx","getContext","points","isDragging","isPointClicked","point","mouseX","mouseY","Math","sqrt","pow","x","y","drawShapes","clearRect","width","height","_i","_points","length","beginPath","arc","PI","fillStyle","fill","dx","dy","fourthPoint","strokeStyle","moveTo","lineTo","closePath","stroke","base","area","abs","r","centerX","centerY","textContent","concat","toFixed","resetCanvas","showAbout","alert","addEventListener","event","rect","getBoundingClientRect","clientX","left","clientY","top","i","push"],"mappings":"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","file":"script.53cc98a6.js","sourceRoot":"..","sourcesContent":["let canvas = document.getElementById(\"myCanvas\");\nlet ctx = canvas.getContext(\"2d\");\nlet points = [];\nlet isDragging = false;\nlet draggingPointIndex;\n\ncanvas.addEventListener(\"mousedown\", function (event) {\n  let rect = canvas.getBoundingClientRect();\n  let x = event.clientX - rect.left;\n  let y = event.clientY - rect.top;\n\n  for (let i = 0; i < points.length; i++) {\n    if (isPointClicked(points[i], x, y)) {\n      isDragging = true;\n      draggingPointIndex = i;\n      return;\n    }\n  }\n\n  if (points.length < 3) {\n    points.push({ x, y });\n    drawShapes();\n  }\n});\n\ncanvas.addEventListener(\"mousemove\", function (event) {\n  if (isDragging) {\n    let rect = canvas.getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    points[draggingPointIndex].x = x;\n    points[draggingPointIndex].y = y;\n\n    drawShapes(); // Redraw everything\n  }\n});\n\ncanvas.addEventListener(\"mouseup\", function (event) {\n  isDragging = false;\n});\n\nfunction isPointClicked(point, mouseX, mouseY) {\n  return Math.sqrt((point.x - mouseX) ** 2 + (point.y - mouseY) ** 2) <= 5.5;\n}\n\nfunction drawShapes() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  for (let point of points) {\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, 5.5, 0, 2 * Math.PI);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n  }\n\n  if (points.length === 3) {\n    let dx = points[2].x - points[1].x;\n    let dy = points[2].y - points[1].y;\n    let fourthPoint = { x: points[0].x + dx, y: points[0].y + dy };\n\n    ctx.strokeStyle = \"blue\";\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    ctx.lineTo(points[1].x, points[1].y);\n    ctx.lineTo(points[2].x, points[2].y);\n    ctx.lineTo(fourthPoint.x, fourthPoint.y);\n    ctx.closePath();\n    ctx.stroke();\n\n    let base = Math.sqrt(dx * dx + dy * dy);\n    let height =\n      Math.abs(\n        points[0].x * (points[1].y - points[2].y) +\n          points[1].x * (points[2].y - points[0].y) +\n          points[2].x * (points[0].y - points[1].y)\n      ) / base;\n    let area = base * height;\n\n    let r = Math.sqrt(area / Math.PI);\n    let centerX = (points[0].x + points[1].x + points[2].x) / 3;\n    let centerY = (points[0].y + points[1].y + points[2].y) / 3;\n\n    ctx.strokeStyle = \"yellow\";\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, r, 0, 2 * Math.PI);\n    ctx.stroke();\n\n    document.getElementById(\n      \"point1\"\n    ).textContent = `Point 1: (${points[0].x.toFixed(2)}, ${points[0].y.toFixed(\n      2\n    )})`;\n    document.getElementById(\n      \"point2\"\n    ).textContent = `Point 2: (${points[1].x.toFixed(2)}, ${points[1].y.toFixed(\n      2\n    )})`;\n    document.getElementById(\n      \"point3\"\n    ).textContent = `Point 3: (${points[2].x.toFixed(2)}, ${points[2].y.toFixed(\n      2\n    )})`;\n    document.getElementById(\"area\").textContent = area.toFixed(2);\n  }\n}\n\nfunction resetCanvas() {\n  points = [];\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  document.getElementById(\"point1\").textContent = \"Point 1: (---, ---)\";\n  document.getElementById(\"point2\").textContent = \"Point 2: (---, ---)\";\n  document.getElementById(\"point3\").textContent = \"Point 3: (---, ---)\";\n  document.getElementById(\"area\").textContent = \"---\";\n}\n\nfunction showAbout() {\n  alert(\n    \"Select three points to draw a parallelogram and a circle. then click one of the points to move it.\"\n  );\n}\n"]}